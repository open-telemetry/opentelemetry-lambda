{
  "tasks": {
    "clobber": {
      "name": "clobber",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "cdktf-get": {
      "name": "cdktf-get",
      "steps": [
        {
          "exec": "cdktf get"
        }
      ]
    },
    "cdktf-build": {
      "name": "cdktf-build",
      "steps": [
        {
          "exec": "cdktf get && tsc"
        }
      ]
    },
    "cdktf-diff": {
      "name": "cdktf-diff",
      "steps": [
        {
          "exec": "cdktf diff"
        }
      ]
    },
    "cdktf-synth": {
      "name": "cdktf-synth",
      "steps": [
        {
          "exec": "cdktf synth"
        }
      ]
    },
    "tsc-compile": {
      "name": "tsc-compile",
      "steps": [
        {
          "exec": "tsc --pretty"
        }
      ]
    },
    "tsc-watch": {
      "name": "tsc-watch",
      "steps": [
        {
          "exec": "tsc -w"
        }
      ]
    },
    "cdktf-upgrade": {
      "name": "cdktf-upgrade",
      "steps": [
        {
          "exec": "npm i cdktf@latest cdktf-cli@latest"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc --build"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests"
    },
    "build": {
      "name": "build",
      "description": "Full release build (test+compile)",
      "steps": [
        {
          "exec": "npx projen"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "default": {
      "name": "default",
      "steps": [
        {
          "exec": "node .projenrc.js"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Create an npm tarball",
      "steps": [
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "yarn pack"
        },
        {
          "exec": "mv *.tgz dist/js/"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
