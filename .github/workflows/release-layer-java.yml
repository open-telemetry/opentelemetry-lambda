name: "Release Javaagent Lambda Layer"

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      aws_region:
        description: 'Deploy to AWS Region'
        required: true
        default: "[ \"us-east-1\", \"us-east-2\", \"us-west-1\", \"us-west-2\", \"ap-south-1\", \"ap-northeast-2\", \"ap-southeast-1\", \"ap-southeast-2\", \"ap-northeast-1\", \"ca-central-1\", \"eu-central-1\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"eu-north-1\", \"sa-east-1\" ]"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      LAYER_VERSION: ${{ steps.save-javaagent-version.outputs.LAYER_VERSION }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK for running Gradle
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        name: Build Javaagent Layer
        with:
          arguments: :layer-javaagent:assemble
          build-root-directory: java

      - uses: actions/upload-artifact@v3
        name: Save assembled layer to build
        with:
          name: opentelemetry-javaagent-layer.zip
          path: java/layer-javaagent/build/distributions/opentelemetry-javaagent-layer.zip

      - name: Save Javaagent Version
        id: save-javaagent-version
        shell: bash
        run: |
          unzip java/layer-javaagent/build/distributions/opentelemetry-javaagent-layer.zip
          JAVAAGENT_VERSION=$(java -jar ./opentelemetry-javaagent.jar)
          JAVAAGENT_VERSION_CLEANED=$(echo "$JAVAAGENT_VERSION" | sed -r 's/\./_/g')
          if [[ ${{ inputs.releaseType }} == "prod" ]]; then
            echo "LAYER_VERSION=$JAVAAGENT_VERSION_CLEANED" >> $GITHUB_OUTPUT
          else
            echo "LAYER_VERSION=${{ inputs.releaseType }}-$JAVAAGENT_VERSION_CLEANED" >> $GITHUB_OUTPUT
          fi
          echo GITHUB_OUTPUT:
          cat $GITHUB_OUTPUT

# TODO: add git tag

  publish:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        aws_region: ${{ fromJson(github.event.inputs.aws_region) }}

    steps:

      - name: Echo Layer Name
        env:
          LAYER_VERSION: ${{needs.build.outputs.LAYER_VERSION}}
        run: echo "opentelemetry-javaagent-$LAYER_VERSION"

      - name: Download built opentelemetry-javaagent-layer.zip
        uses: actions/download-artifact@v3
        with:
          name: opentelemetry-javaagent-layer.zip

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.PROD_LAMBDA_ROLE_ARN }}
          role-duration-seconds: 1200
          aws-region: ${{ matrix.aws_region }}
          mask-aws-account-id: false

      - name: Publish Javaagent Lambda Layer
        env:
          LAYER_VERSION: ${{needs.build.outputs.LAYER_VERSION}}
        run: |
          aws lambda publish-layer-version \
          --layer-name opentelemetry-javaagent-$LAYER_VERSION \
          --description "OpenTelemetry Javaagent Layer" \
          --license-info "Apache 2.0" \
          --zip-file fileb://opentelemetry-javaagent-layer.zip
