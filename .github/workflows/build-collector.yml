name: "Manual Build (Collector)"

on:
  workflow_dispatch:
    inputs:
      architecture:
        type: choice
        description: Architecture
        options:
          - all
          - amd64
          - arm64
        default: all
      aws_region:
        type: choice
        description: AWS Region
        options:
          - all
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
        default: all

jobs:
  include-jobs:
    runs-on: ubuntu-latest
    outputs:
      jobs: ${{ steps.include-jobs.outputs.jobs }}
    steps:
      - id: include-jobs
        name: Include jobs
        run: |
          architectures=''
          if [ ${{ github.event.inputs.architecture }} == 'all' ]; then
            architectures='["amd64", "arm64"]'
          else
            architectures='["${{ github.event.inputs.architecture }}"]'
          fi
          aws_regions=''
          if [ ${{ github.event.inputs.aws_region }} == 'all' ]; then
            aws_regions='["ap-northeast-1", "ap-northeast-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "eu-central-1", "eu-north-1", "eu-west-1", "eu-west-2", "eu-west-3", "sa-east-1", "us-east-1", "us-east-2", "us-west-1", "us-west-2"]'
          else
            aws_regions='["${{ github.event.inputs.aws_region }}"]'
          fi
          echo "jobs={"architecture": ${architectures}, "aws_region": ${aws_regions}}" | tr -d '[:space:]' >> $GITHUB_OUTPUT
  build:
    needs: include-jobs
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.include-jobs.outputs.jobs) }}
    outputs:
      COLLECTOR_VERSION: ${{ steps.save-collector-version.outputs.COLLECTOR_VERSION }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.21.9'
      - name: Build Collector
        run: make -C collector package GOARCH=${{ matrix.architecture }}
      - name: Upload Collector Artifact
        uses: actions/upload-artifact@v4
        with:
          name: opentelemetry-collector-layer-${{ matrix.architecture }}-${{ matrix.aws_region }}.zip
          path: ${{ github.workspace }}/collector/build/opentelemetry-collector-layer-${{ matrix.architecture }}.zip
