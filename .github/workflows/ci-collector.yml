name: "Continuous Build (Collector)"

on:
  push:
    paths:
      - 'collector/**'
      - '.github/workflows/ci-collector.yml'
    branches:
      - main
  pull_request:
    paths:
      - 'collector/**'
      - '.github/workflows/ci-collector.yml'
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.20.8'
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Tidy
        run: make gotidy
        working-directory: collector
      - name: Run tests
        run: make gotest
        working-directory: collector
  build:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        architecture: [ amd64, arm64 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.20.8'
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build Collector Executable for ${{ matrix.architecture }} architecture
        run: GOARCH=${{ matrix.architecture }} make package
        working-directory: collector
      - name: Get Lambda Layer amd64 architecture value
        if: ${{ matrix.architecture == 'amd64' }}
        run: echo LAMBDA_LAYER_ARCHITECTURE=x86 | tee --append $GITHUB_ENV
      - name: Get Lambda Layer arm64 architecture value
        if: ${{ matrix.architecture == 'arm64' }}
        run: echo LAMBDA_LAYER_ARCHITECTURE=ARM | tee --append $GITHUB_ENV
      - name: Confirm architecture of built collector
        working-directory: collector/build/extensions
        run: |
          grep ${{ env.LAMBDA_LAYER_ARCHITECTURE }} <<< "$(file collector)"
